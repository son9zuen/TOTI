<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yal.toti.kang.dao.RequestDaoInterface">

	<!-- 분야 리스트 -->
	<select id="categorieList" resultType="com.yal.toti.kang.domain.CategoriData">
		select * from toti_cate
	</select>
	
	<!--로그인한 유저(멘토)의 카테고리명 -->
	<select id="categorieIdx" resultType="String">
		select cate_idx from toti_member m join toti_mentor mt
		on m.m_idx = mt.mento_idx
		where m_idx=#{m_idx}
	</select>
	
	<!-- 분야번호에 맞는 분야명 -->
	<select id="cate_data" resultType="com.yal.toti.kang.domain.CategoriData" parameterType="int">
		select * from toti_cate where cate_idx=#{cate_idx}
	</select>
	
	<!-- 분야번호에 맞는 서비스번호, 서비스명 리스트 -->
	<select id="serviceData" resultType="com.yal.toti.kang.domain.ServiceData" parameterType="int">
		select s.service_idx, s.service_name from toti_cate c join toti_service s 
		on c.cate_idx = s.cate_idx
		where c.cate_idx=#{cate_idx}
	</select>
	
	<!-- 분야번호에 맞는 질문번호, 질문 -->
	<select id="questData" resultType="com.yal.toti.kang.domain.QuestionsData" parameterType="int">
		select q.quest_idx, q.quest_name, q.quest_type  from toti_cate c join toti_question q 
		on c.cate_idx = q.cate_idx
		where c.cate_idx=#{cate_idx} or c.cate_idx=4
	</select>
	
	<!-- 질문번호에 맞는 항목 -->
	<select id="itemListData" resultType="com.yal.toti.kang.domain.ItemListData">
		select item_idx, item_cont from toti_question join toti_item
		using(quest_idx)
		where quest_idx=#{quest_idx}
	</select>
	
	<!-- 요청서 등록 -->
	<insert id="insertRequest" keyProperty="request_idx" useGeneratedKeys="true" parameterType="com.yal.toti.kang.domain.RequestData">
		insert into toti_request (m_idx, cate_idx) values (#{m_idx}, #{cate_idx})
	</insert>
	
	<!-- 서비스 등록 -->
	<insert id="insertService" parameterType="com.yal.toti.kang.domain.RequestData">
		insert into toti_mentee_service (request_idx, m_idx, service_idx) values
		(#{request_idx}, #{m_idx}, #{service_idx})
	</insert>
	
	<!-- 답변 등록 -->
	<insert id="insertAnswer" parameterType="java.util.Map">
		insert into toti_answer (request_idx, quest_idx, answer_cont) values
		<foreach collection="answerDatas" item="item" separator=",">
			(#{request_idx}, #{item.qurest_idx}, #{item.answer_cont})
		</foreach>
	</insert>
	
	<!-- 로그인한 유저의 요청서리스트 -->
	<select id="userRequestList" resultType="com.yal.toti.kang.domain.UserRequestList">
		select r.request_idx, c.cate_name, s.service_name, date_format(request_date, '%y-%m-%d') request_date 
		from toti_request r join toti_cate c join toti_mentee_service ms join toti_service s
		on r.cate_idx = c.cate_idx and ms.request_idx = r.request_idx and ms.service_idx = s.service_idx
		where r.m_idx = #{param1}
		order by r.request_date desc
	</select>
	
	<!-- 요청서 개수 -->
	<select id="requestCnt" resultType="int">
		select count(*) from toti_estimatee e join toti_request r
		on e.request_idx = r.request_idx
		where r.request_idx = #{param1}
	</select>
	
	<!-- 5일지난 유저의 요청서번호 -->
	<select id="userDelRequestNum" resultType="int">
		select request_idx from toti_request
		where date_add(request_date, INTERVAL 5 DAY)-now()<![CDATA[ < ]]>0 and m_idx=#{m_idx}
	</select>
	
	<!-- 5일지난 유저의 요청서 삭제 스케줄러사용-->
	<delete id="userRequestDel">
		delete from toti_request where request_idx in
		(select request_idx from(
		select request_idx from toti_request
		where date_add(request_date, INTERVAL 5 DAY)-now()<![CDATA[ < ]]>0) re)
	</delete>
	
	<!-- ==============요청서 정보에 대한 Mapper================ -->
	<!-- 로그인한 유저정보 -->
	<select id="requestUserInfo" resultType="com.yal.toti.kang.domain.RequestUser">
		select m_name, m_photo from toti_request r join toti_member m
		on r.m_idx = m.m_idx
		where r.request_idx = #{param1} and m.m_idx = #{param2}
	</select>
	
	<!-- 분야 -->
	<select id="requestCate" resultType="String">
		select cate_name from toti_request r join toti_cate c
		on r.cate_idx = c.cate_idx
		where r.request_idx = #{param1}
	</select>
	
	<!-- 서비스 -->
	<select id="requestService" resultType="String">
		select service_name from toti_request r join toti_service s join toti_mentee_service ms
		on ms.request_idx = r.request_idx and ms.service_idx = s.service_idx
		where r.request_idx = #{param1}
	</select>
	
	<!-- 질문답변 -->
	<select id="requestAnswer" resultType="com.yal.toti.kang.domain.RequestAnswer">
		select quest_name, answer_cont from toti_request r join toti_answer a join toti_question q
		on r.request_idx = a.request_idx and q.quest_idx = a.quest_idx
		where r.request_idx = #{param1}
	</select>
	
	<!-- 시간 -->
	<select id="requestDate" resultType="String">
		select date_format(request_date, '%Y년 %m월 %d일') request_date
		from toti_request
		where request_idx = #{param1}
	</select>
	<!-- ===================================================== -->
	
	<!-- 견적서 데이터 리스트 -->
	<select id="estimateeList" resultType="com.yal.toti.kang.domain.EstimateeListData">
		select es.est_idx, mt.mento_idx, m.m_name, mp.p_shot, mt.tor_location,m_photo, es.est_price, date_format(es.est_date, '%y-%m-%d %H:%i') est_date,
		(if(isnull(rv.review_idx),0,(select round(avg(sr.review_star),1) from toti_review sr where sr.mento_idx = mt.mento_idx))) str,
		(select count(*) from toti.toti_review src where mt.mento_idx = src.mento_idx) cont_cnt
		from toti_mentor mt join toti_mentor_profile mp join toti_member m join toti_estimatee es
		on mt.mento_idx = m.m_idx and mt.mento_idx = es.mento_idx and mt.mento_idx = mp.mento_idx 
		left outer join toti_review rv
		on rv.mento_idx = mt.mento_idx
		where es.request_idx = #{request_idx}
		group by est_idx
	</select>
	
	<!-- 요청서 취소(삭제) -->
	<delete id="requestDelete">
		delete from toti_request where request_idx = #{param1};
	</delete>
	
</mapper>


 
 